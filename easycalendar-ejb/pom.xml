<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.diazdev</groupId>
	<artifactId>easycalendar-ejb</artifactId>
	<version>1.0</version>
	<packaging>jar</packaging>
	<name>EJB and Entities</name>
	<url>http://diazdev.com</url>
	<description>Logica de negocio y objectos de dominio</description>

	<properties>
		<javaee.api.version>7.0</javaee.api.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.plugin.version>3.1</maven.compiler.plugin.version>
		<maven.war.plugin.version>2.3</maven.war.plugin.version>
		<maven.license.plugin.version>1.10.b1</maven.license.plugin.version>
	</properties>

	<repositories>
		<repository>
			<id>normal</id>
			<url>http://repo1.maven.org/maven2</url>
		</repository>
		<repository>
			<id>jboss</id>
			<url>http://repository.jboss.com/maven2</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>java</id>
			<url>http://download.java.net/maven/2</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

	<dependencies>
		<!-- JEE -->
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-api</artifactId>
			<version>${javaee.api.version}</version>
			<scope>provided</scope>
		</dependency>
		<!-- Log4J -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>2.3</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>2.3</version>
			<scope>provided</scope>
		</dependency>
		<!-- JUnit and related -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>5.8</version>
			<classifier>jdk15</classifier>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jmock</groupId>
			<artifactId>jmock-junit4</artifactId>
			<version>2.6.0</version>
			<scope>test</scope>
		</dependency>
		<!-- EJB3 -->
		<dependency>
			<groupId>javax.ejb</groupId>
			<artifactId>ejb-api</artifactId>
			<version>3.0</version>
		</dependency>
		<!-- JPA API and Hibernate -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>4.3.6.Final</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>5.1.2.Final</version>
		</dependency>
		<dependency>
			<groupId>javax.persistence</groupId>
			<artifactId>persistence-api</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache-core</artifactId>
			<version>2.2.0</version>
		</dependency>
		<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache-terracotta</artifactId>
			<version>2.1.1</version>
		</dependency>
		<dependency>
			<groupId>hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>1.8.0.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.derby</groupId>
			<artifactId>derby</artifactId>
			<version>10.6.1.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.derby</groupId>
			<artifactId>derbyclient</artifactId>
			<version>10.9.1.0</version>
		</dependency>
		<!-- JSON APIs -->
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>1.9.13</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish</groupId>
			<artifactId>javax.json</artifactId>
			<version>1.0.4</version>
		</dependency>
	</dependencies>

	<build>
		<finalName>easycalendar-ejb</finalName>
		<plugins>
			<plugin>
    			<groupId>org.apache.maven.plugins</groupId>
    			<artifactId>maven-install-plugin</artifactId>
    			<version>2.5</version>
    			<executions>
        			<execution>
            			<goals>
                			<goal>install</goal>
            			</goals>
            			<configuration>
                			<groupId>com.diazdev</groupId>
							<artifactId>easycalendar-ejb</artifactId>
							<version>1.0</version>
							<packaging>jar</packaging>
							<installAtEnd>true</installAtEnd>
            			</configuration>
        			</execution>
    			</executions>
			</plugin>
			<!-- Generate a SQL script using the existing JPA classes in the project -->
			<plugin>
				<!-- run "mvn hibernate3:hbm2ddl" to generate a schema -->
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>hibernate3-maven-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<components>
						<component>
							<name>hbm2ddl</name>
							<implementation>jpaconfiguration</implementation>
						</component>
					</components>
					<componentProperties>
						<persistenceunit>testingPersistenceUnit</persistenceunit>
						<outputfilename>create-schema-for-derby.sql</outputfilename>
						<drop>false</drop>
						<create>true</create>
						<export>false</export>
						<format>true</format>
					</componentProperties>
				</configuration>
			</plugin>

			<!-- Execution of SQL statements -->
			<!-- run "mvn sql:execute@create-schema" to generate a schema -->
			<!-- run "mvn sql:execute@drop-schema" to generate a schema -->
			<!-- run "mvn sql:execute@create-test-data" if you want to generate data -->
			<!-- Example: http://hmkcode.com/sq-maven-plugin-mysql/ -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sql-maven-plugin</artifactId>
				<version>1.5</version>
				<!-- jdbc dirver specific for each target database -->
				<dependencies>
					<dependency>
						<groupId>org.apache.derby</groupId>
						<artifactId>derbyclient</artifactId>
						<version>10.11.1.1</version>
					</dependency>
				</dependencies>
				<!-- connection settings -->
				<configuration>
					<driver>org.apache.derby.jdbc.ClientDriver</driver>
					<url>jdbc:derby://localhost:1527/easycalendar_db;create=true</url>
					<username>APP</username>
					<password>APP</password>
					<settingsKey>sensibleKey</settingsKey>
					<skip>false</skip>
				</configuration>
				<!-- phase, goal & SQL (command or file) -->
				<executions>
					<!-- Do this task first -->
					<execution>
						<id>create-schema</id>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<autocommit>true</autocommit>
							<fileset>
								<basedir>${basedir}</basedir>
								<includes>
									<!-- If the content is wrong the command wont inform and nothing is done in the db. -->
									<include>src/test/sql/create-schema.sql</include>
								</includes>
							</fileset>
						</configuration>
					</execution>
					<!-- Do this task second -->
					<execution>
						<id>create-test-data</id>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<autocommit>true</autocommit>
							<orderFile>ascending</orderFile>
							<fileset>
								<basedir>${basedir}</basedir>
								<includes>
									<include>src/test/sql/create_test_data.sql</include>
								</includes>
							</fileset>
						</configuration>
					</execution>
					<!-- Drop schema -->
					<execution>
						<id>drop-schema</id>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<autocommit>true</autocommit>
							<fileset>
								<basedir>${basedir}</basedir>
								<includes>
									<include>src/test/sql/drop_schema.sql</include>
								</includes>
							</fileset>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-ejb-plugin</artifactId>
				<version>2.1</version>
				<configuration>
					<ejbVersion>3.0</ejbVersion>
					<archive>
						<addMavenDescriptor>false</addMavenDescriptor>
						<manifestEntries>
							<Specification-Title>Easycalendar EJB</Specification-Title>
							<Specification-Version>1.0</Specification-Version>
							<Specification-Vendor>AugustoDiaz Inc</Specification-Vendor>
							<Implementation-Title>Prototype A</Implementation-Title>
							<Implementation-Version>1.0</Implementation-Version>
							<Implementation-Vendor>AugustoDiaz Inc</Implementation-Vendor>
							<Build-Name>xxx</Build-Name>
							<Subversion-Revision>xxx</Subversion-Revision>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.0.2</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											sql-maven-plugin
										</artifactId>
										<versionRange>
											[1.5,)
										</versionRange>
										<goals>
											<goal>execute</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
